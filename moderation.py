import discord
from discord import app_commands
from discord.ext import commands
import asyncio
from datetime import timedelta

intents = discord.Intents.all()
bot = commands.Bot(command_prefix="/", intents=intents)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:
# –ó–∞–º–µ–Ω–∏—Ç–µ MY_GUILD_ID –Ω–∞ ID –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –º–≥–Ω–æ–≤–µ–Ω–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥.
MY_GUILD_ID = 1139578692159414382  # <-- –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à ID —Å–µ—Ä–≤–µ—Ä–∞

# ID –∫–∞–Ω–∞–ª–æ–≤ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:
log_moderation_id = 1149990513026531379  # –ë–∞–Ω/–ö–∏–∫/–¢–∞–π–º–∞—É—Ç/–í—Ö–æ–¥-–í—ã—Ö–æ–¥
log_voice_id = 1149990591476805762  # –í–æ–π—Å-—Å–æ–±—ã—Ç–∏—è
log_messages_id = 1149990659793633311  # –£–¥–∞–ª–µ–Ω–∏–µ/–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
log_nick_role_id = 1149990708254617603  # –°–º–µ–Ω–∞ –Ω–∏–∫–æ–≤, —Ä–æ–ª–µ–π, —Ä–µ–∞–∫—Ü–∏–∏

# ID –∫–∞–Ω–∞–ª–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:
WELCOME_CHANNEL_ID = 1139591852119576596

logs_enabled = True  # –§–ª–∞–≥ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
roles_enabled = True  # –§–ª–∞–≥ –∞–≤—Ç–æ–≤—ã–¥–∞—á–∏ —Ä–æ–ª–µ–π

# ID —Ä–æ–ª–∏ –¥–ª—è –∞–≤—Ç–æ–≤—ã–¥–∞—á–∏:
AUTO_ROLE_ID = 1139591830405656707

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–µ–π –ø–æ —Ä–µ–∞–∫—Ü–∏–∏:
role_message_map = {}


# ------------------------------------------------------------------------------
# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Embed-–ª–æ–≥–æ–≤
# ------------------------------------------------------------------------------
async def log_embed(channel_id: int, embed: discord.Embed):
    if logs_enabled:
        channel = bot.get_channel(channel_id)
        if channel:
            await channel.send(embed=embed)
        print(f"[LOG] {embed.title}: {embed.description}")


# ------------------------------------------------------------------------------
# –°–æ–±—ã—Ç–∏–µ: –±–æ—Ç –∑–∞–ø—É—â–µ–Ω
# ------------------------------------------------------------------------------
@bot.event
async def on_ready():
    # –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥:
    await bot.tree.sync()
    # –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –º–≥–Ω–æ–≤–µ–Ω–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ:
    # await bot.tree.sync(guild=discord.Object(id=MY_GUILD_ID))
    await bot.change_presence(status=discord.Status.invisible)
    print(f"–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")


# ------------------------------------------------------------------------------
# –ú–æ–¥–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
# ------------------------------------------------------------------------------
@bot.tree.command(name="ban", description="–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—Ä–µ–º—è (–≤ –º–∏–Ω—É—Ç–∞—Ö)")
async def ban(interaction: discord.Interaction, user: discord.Member, time: int, reason: str):
    await user.ban(reason=reason)
    embed = discord.Embed(
        title="User Banned",
        description=f"{user.mention} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ {time} –º–∏–Ω—É—Ç.\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
        color=0xFF0000
    )
    embed.set_author(name=str(interaction.user), icon_url=interaction.user.display_avatar.url)
    await log_embed(log_moderation_id, embed)

    async def unban_after_delay():
        await asyncio.sleep(time * 60)
        await interaction.guild.unban(user)
        embed_unban = discord.Embed(
            title="User Unbanned",
            description=f"{user.mention} —Ä–∞–∑–±–∞–Ω–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.",
            color=0x00FF00
        )
        await log_embed(log_moderation_id, embed_unban)

    asyncio.create_task(unban_after_delay())
    await interaction.response.send_message(f"{user.mention} –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ {time} –º–∏–Ω—É—Ç.")


@bot.tree.command(name="kick", description="–ö–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def kick(interaction: discord.Interaction, user: discord.Member, reason: str):
    await user.kick(reason=reason)
    embed = discord.Embed(
        title="User Kicked",
        description=f"{user.mention} –∫–∏–∫–Ω—É—Ç.\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
        color=0xFF0000
    )
    embed.set_author(name=str(interaction.user), icon_url=interaction.user.display_avatar.url)
    await log_embed(log_moderation_id, embed)
    await interaction.response.send_message(f"{user.mention} –∫–∏–∫–Ω—É—Ç.")


@bot.tree.command(name="unban", description="–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID")
async def unban(interaction: discord.Interaction, user_id: int):
    user = await bot.fetch_user(user_id)
    await interaction.guild.unban(user)
    embed = discord.Embed(
        title="User Unbanned",
        description=f"{user.mention} —Ä–∞–∑–±–∞–Ω–µ–Ω.",
        color=0x00FF00
    )
    embed.set_author(name=str(interaction.user), icon_url=interaction.user.display_avatar.url)
    await log_embed(log_moderation_id, embed)
    await interaction.response.send_message(f"{user.mention} —Ä–∞–∑–±–∞–Ω–µ–Ω.")


# ------------------------------------------------------------------------------
# –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∞–º–∏ –∏ –∞–≤—Ç–æ–≤—ã–¥–∞—á–µ–π —Ä–æ–ª–µ–π
# ------------------------------------------------------------------------------
@bot.tree.command(name="logs", description="–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ª–æ–≥–∏ (on/off)")
async def logs(interaction: discord.Interaction, input: str):
    global logs_enabled
    logs_enabled = input.lower() == "on"
    status = "–≤–∫–ª—é—á–µ–Ω—ã" if logs_enabled else "–≤—ã–∫–ª—é—á–µ–Ω—ã"
    await interaction.response.send_message(f"–õ–æ–≥–∏ {status}.")


@bot.tree.command(name="autoroles", description="–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–≤—ã–¥–∞—á—É —Ä–æ–ª–µ–π (on/off)")
async def autoroles(interaction: discord.Interaction, input: str):
    global roles_enabled
    roles_enabled = input.lower() == "on"
    status = "–≤–∫–ª—é—á–µ–Ω–∞" if roles_enabled else "–≤—ã–∫–ª—é—á–µ–Ω–∞"
    await interaction.response.send_message(f"–ê–≤—Ç–æ–≤—ã–¥–∞—á–∞ —Ä–æ–ª–µ–π {status}.")


# ------------------------------------------------------------------------------
# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–µ–π –ø–æ —Ä–µ–∞–∫—Ü–∏–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç ID —Ä–æ–ª–µ–π)
# ------------------------------------------------------------------------------
@bot.tree.command(name="roles", description="–°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ä–æ–ª–µ–π –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º")
async def roles_cmd(interaction: discord.Interaction, message_id: str, roles: str, emoji: str):
    """
    –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    /roles message_id:1341190070908092418 roles:1311608369324490793,123456789012345678 emoji:üëç
    –í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –±–æ—Ç —Å–≤—è–∂–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID 1341190070908092418 —Å –≤—ã–¥–∞—á–µ–π —Ä–æ–ª–µ–π –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º,
    –≥–¥–µ —Ä–æ–ª–∏ –∑–∞–¥–∞—é—Ç—Å—è –∏—Ö ID (—Ä–∞–∑–¥–µ–ª–µ–Ω—ã –∑–∞–ø—è—Ç—ã–º–∏) –∏ —ç–º–æ–¥–∑–∏ ‚Äî üëç.
    """
    channel = interaction.channel
    try:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º message_id –≤ int
        msg_id = int(message_id)
        message = await channel.fetch_message(msg_id)
        # –¢–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–æ–ª–∏ –∫–∞–∫ —Å–ø–∏—Å–æ–∫ ID
        role_list = []
        for role_id in roles.split(","):
            role_id = role_id.strip()
            try:
                role = interaction.guild.get_role(int(role_id))
                if role:
                    role_list.append(role)
            except Exception as e:
                continue
        if not role_list:
            await interaction.response.send_message(
                "–ù–∏ –æ–¥–Ω–∞ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ ID —Ä–æ–ª–µ–π.")
            return
        role_message_map[message.id] = {emoji: role_list}
        await message.add_reaction(emoji)
        embed = discord.Embed(
            title="Reaction Roles Setup",
            description=(
                f"–ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤—ã–¥–∞—á–∞ —Ä–æ–ª–µ–π –ø–æ —Ä–µ–∞–∫—Ü–∏–∏ {emoji}.\n"
                f"–†–æ–ª–∏: {', '.join(r.mention for r in role_list)}\n\n"
                f"–°–æ–æ–±—â–µ–Ω–∏–µ: [Jump to message]({message.jump_url})"
            ),
            color=0x2F3136
        )
        embed.set_author(name=str(interaction.user), icon_url=interaction.user.display_avatar.url)
        await interaction.response.send_message(embed=embed)
    except Exception as e:
        await interaction.response.send_message(f"–û—à–∏–±–∫–∞: {e}")


# ------------------------------------------------------------------------------
# –ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ /clear –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
# ------------------------------------------------------------------------------
@bot.tree.command(name="clear", description="–£–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ")
async def clear(interaction: discord.Interaction, number_of_messages: int):
    try:
        deleted = await interaction.channel.purge(limit=number_of_messages)
        await interaction.response.send_message(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(deleted)}", ephemeral=True)
    except Exception as e:
        await interaction.response.send_message(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}", ephemeral=True)


# ------------------------------------------------------------------------------
# –°–æ–±—ã—Ç–∏—è —Å–µ—Ä–≤–µ—Ä–∞: –≤—Ö–æ–¥, –≤—ã—Ö–æ–¥, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –≤–æ–π—Å, —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∏–∫–∏, —Ä–æ–ª–∏
# ------------------------------------------------------------------------------
@bot.event
async def on_member_join(member):
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:
    channel = bot.get_channel(WELCOME_CHANNEL_ID)
    if channel:
        await channel.send(
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {member.mention}!\n"
            "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –∏ –æ–∂–∏–¥–∞–π –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ :)"
        )
    embed = discord.Embed(
        title="Member Joined",
        description=f"{member.mention} –≤–æ—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä.",
        color=0x2ECC71
    )
    await log_embed(log_moderation_id, embed)
    if roles_enabled:
        role = member.guild.get_role(AUTO_ROLE_ID)
        if role:
            await member.add_roles(role)
            embed_role = discord.Embed(
                title="Auto Role Assigned",
                description=f"–†–æ–ª—å {role.mention} –≤—ã–¥–∞–Ω–∞ {member.mention}.",
                color=0x2ECC71
            )
            await log_embed(log_nick_role_id, embed_role)


@bot.event
async def on_member_remove(member):
    embed = discord.Embed(
        title="Member Left",
        description=f"{member.mention} –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä.",
        color=0x3498DB
    )
    await log_embed(log_moderation_id, embed)


@bot.event
async def on_voice_state_update(member, before, after):
    if before.channel != after.channel:
        if after.channel and not before.channel:
            embed = discord.Embed(
                title="Voice Channel Joined",
                description=f"{member.mention} –∑–∞—à–µ–ª –≤ {after.channel.name}.",
                color=0x5865F2
            )
            await log_embed(log_voice_id, embed)
        elif before.channel and not after.channel:
            embed = discord.Embed(
                title="Voice Channel Left",
                description=f"{member.mention} –≤—ã—à–µ–ª –∏–∑ {before.channel.name}.",
                color=0x5865F2
            )
            await log_embed(log_voice_id, embed)
        else:
            embed = discord.Embed(
                title="Voice Channel Switched",
                description=f"{member.mention} –ø–µ—Ä–µ—à–µ–ª –∏–∑ {before.channel.name} –≤ {after.channel.name}.",
                color=0x5865F2
            )
            await log_embed(log_voice_id, embed)
    if before.mute != after.mute:
        embed = discord.Embed(
            title="Voice Mute Updated",
            description=f"{member.mention} —Ç–µ–ø–µ—Ä—å {'–∑–∞–º—É—á–µ–Ω' if after.mute else '—Ä–∞–∑–º—É—á–µ–Ω'}.",
            color=0x5865F2
        )
        await log_embed(log_voice_id, embed)
    if before.deaf != after.deaf:
        embed = discord.Embed(
            title="Voice Deaf Updated",
            description=f"{member.mention} —Ç–µ–ø–µ—Ä—å {'–∑–∞–≥–ª—É—à–µ–Ω' if after.deaf else '—Ä–∞–∑–≥–ª—É—à–µ–Ω'}.",
            color=0x5865F2
        )
        await log_embed(log_voice_id, embed)


@bot.event
async def on_message_delete(message):
    if message.author.bot:
        return
    embed = discord.Embed(
        title="Message Deleted",
        color=0xED4245
    )
    embed.add_field(name="Author", value=message.author.mention, inline=True)
    embed.add_field(name="Channel", value=message.channel.mention, inline=True)
    embed.add_field(name="Content", value=message.content or "–ü—É—Å—Ç–æ", inline=False)
    await log_embed(log_messages_id, embed)


@bot.event
async def on_message_edit(before, after):
    if before.author.bot:
        return
    if before.content != after.content:
        embed = discord.Embed(
            title="Message Edited",
            color=0xFEE75C
        )
        embed.add_field(name="Author", value=before.author.mention, inline=True)
        embed.add_field(name="Channel", value=before.channel.mention, inline=True)
        embed.add_field(name="Old", value=before.content or "–ü—É—Å—Ç–æ", inline=False)
        embed.add_field(name="New", value=after.content or "–ü—É—Å—Ç–æ", inline=False)
        await log_embed(log_messages_id, embed)


@bot.event
async def on_member_update(before, after):
    if before.nick != after.nick:
        embed = discord.Embed(
            title="Nickname Changed",
            color=0xF1C40F
        )
        embed.add_field(name="User", value=before.mention, inline=True)
        embed.add_field(name="Old Nickname", value=before.nick or "–ù–µ—Ç", inline=False)
        embed.add_field(name="New Nickname", value=after.nick or "–ù–µ—Ç", inline=False)
        await log_embed(log_nick_role_id, embed)
    if before.roles != after.roles:
        old_roles = set(before.roles)
        new_roles = set(after.roles)
        added = new_roles - old_roles
        removed = old_roles - new_roles
        if added or removed:
            desc = []
            if added:
                desc.append(f"**–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ–ª–∏:** {', '.join(r.mention for r in added)}")
            if removed:
                desc.append(f"**–£–±—Ä–∞–Ω—ã —Ä–æ–ª–∏:** {', '.join(r.mention for r in removed)}")
            embed = discord.Embed(
                title="Roles Updated",
                description="\n".join(desc),
                color=0xF1C40F
            )
            embed.add_field(name="User", value=before.mention, inline=True)
            await log_embed(log_nick_role_id, embed)


@bot.event
async def on_raw_reaction_add(payload):
    if payload.message_id in role_message_map:
        guild = bot.get_guild(payload.guild_id)
        member = guild.get_member(payload.user_id)
        if member and not member.bot:
            roles_for_emoji = role_message_map[payload.message_id].get(str(payload.emoji), [])
            for role in roles_for_emoji:
                await member.add_roles(role)
            if roles_for_emoji:
                embed = discord.Embed(
                    title="Role Granted by Reaction",
                    description=(
                        f"{member.mention} –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å(–∏): {', '.join(r.mention for r in roles_for_emoji)}\n"
                        f"–†–µ–∞–∫—Ü–∏—è: {payload.emoji}"
                    ),
                    color=0x2ECC71
                )
                await log_embed(log_nick_role_id, embed)


@bot.event
async def on_raw_reaction_remove(payload):
    if payload.message_id in role_message_map:
        guild = bot.get_guild(payload.guild_id)
        member = guild.get_member(payload.user_id)
        if member and not member.bot:
            roles_for_emoji = role_message_map[payload.message_id].get(str(payload.emoji), [])
            for role in roles_for_emoji:
                await member.remove_roles(role)
            if roles_for_emoji:
                embed = discord.Embed(
                    title="Role Removed by Reaction",
                    description=(
                        f"{member.mention} –ø–æ—Ç–µ—Ä—è–ª —Ä–æ–ª—å(–∏): {', '.join(r.mention for r in roles_for_emoji)}\n"
                        f"–†–µ–∞–∫—Ü–∏—è: {payload.emoji}"
                    ),
                    color=0xED4245
                )
                await log_embed(log_nick_role_id, embed)


bot.run("MTM0MTE4NDY4MjkwNTMwOTI5NQ.GKGLp6.FsO1-niUEGZmODLZOtTg02t_qPJ-_yOTGCFDII")
